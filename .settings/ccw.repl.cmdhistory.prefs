cmdhistory=["null" "nil" "(nil? nil)" "(ns Sigyn.core)" "(defn pat1 (tuple [1 2 nil]))" "(def pat1 (tuple [1 2 nil]))" "(match? pat1 (tuple [1 2 3]))" "(tuple [1 2 3])" "pat1" "(match? pat1 (tuple [1 2 3]))" "(defrecord tuple-pattern [vec]\\n  Pattern\\n  (match? [this instance]\\n    (every? (map match? this instance)))\\n  )" "(match? pat1 (tuple [1 2 3]))" "(def pat1 (tuple [1 2 nil]))" "(match? pat1 (tuple [1 2 3]))" "(map \#([%1 %2]) [1 2 3] [4 5 6])" "(\#(+ 1 %) 2)" "(map \#(+ 1 %) [2 3])" "(\#(+ %1 %2) 1 2)" "(dorun (map \#(println %1 %2) [1 2 3 4] [2 3 4 5]))" "(map \#(cons %1 %2) [1 2 3 4] [1 2 3 4])" "(map \#(println %1 %2) [1 2 3 4] [1 2 3 4])" "(cons 1 2)" "(every? \#(and %1 %2) [true true true] [true true true])" "(vector 1 2)" "(map \#(vector %1 %2) [1 2 3] [1 2 3])" "(def pat1 (tuple [1 2 nil]))" "(match? pat1 (tuple [1 2 3]))" "(def pat1 (tuple [1 2 nil]))" "(match? pat1 (tuple [1 2 3]))" "(every? \#(apply match? %) (list [(term 1) (term1)]))" "(every? \#(apply match? %) (list [(term 1) (term \\n                                            1)]))" "(map \#(vector %1 %2) pat1 pat1)" "(def pat1 (tuple [1 2 nil]))" "(match? pat1 pat1)" "(match? pat1 (tuple [1 2 3]))" "(match? (tuple [1 2 nil]) (tuple [1 2 3]))" "(map \#(vector %1 %2) (\:vec (tuple [1 2 nil])) (\:vec (tuple [1 2 3])))" "(match? (tuple [1 2 nil]) (tuple [1 2 3]))" "(is (\= 0 1))" "(run-tests)" "(ns Sigyn.core)" "(ns Sigyn.core-tests)" "(run-tests)" "(ns Sigyn.core)" "(run-tests)" "(ns Sigyn.core-test)" "(run-tests)" "(ns Sigyn.core)" "(ns testing.core)" "(foo 2)" "(run-tests)" "(ns testing.core-tests (\:use clojure.test testing.core))" "(run-tests)" "(ns Sigyn.core-test\\n  (\:use clojure.test\\n        Sigyn.core))" "(run-tests)"]
eclipse.preferences.version=1
